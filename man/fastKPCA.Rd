% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kpca.R
\name{fastKPCA}
\alias{fastKPCA}
\title{Fast Kernel Principal Component Analysis (KPCA)}
\usage{
fastKPCA(X, gamma, n_components, scale_data = FALSE)
}
\arguments{
\item{X}{A numeric matrix or data frame (observations x features).}

\item{gamma}{The parameter for the RBF kernel (exp(-gamma * ||x - y||^2)).}

\item{n_components}{The number of principal components to return.}

\item{scale_data}{Logical, whether to scale the data before applying KPCA (default: FALSE).}
}
\value{
An object of class \code{fastKPCA} containing:
\describe{
\item{eigenvalues}{A numeric vector of the top positive eigenvalues of the centered kernel matrix.}
\item{pcv}{A matrix containing the principal component vectors (alpha), which are the scaled eigenvectors \eqn{\alpha = V \Lambda^{-1/2}}. Used for projection.}
\item{gamma}{The kernel parameter used.}
\item{n_components_requested}{The number of components initially requested.}
\item{n_components_returned}{The actual number of components returned (after filtering non-positive eigenvalues).}
\item{X_train}{The original training data matrix used.}
\item{K_train_col_sums}{Column sums of the uncentered training kernel matrix K.}
\item{K_train_total_sum}{Sum of all elements in the uncentered training kernel matrix K.}
\item{n_train}{Number of training samples.}
\item{scaling_params}{Scaling parameters if scale_data=TRUE.}
}
}
\description{
Performs Kernel PCA using the Gaussian (RBF) kernel.
This function leverages RcppArmadillo for efficient computation.
}
\examples{
# Generate sample data
set.seed(123)
X_train <- rbind(matrix(rnorm(100, mean = 0), 50, 2),
                 matrix(rnorm(100, mean = 3), 50, 2))

# Perform fast KPCA
kpca_result <- fastKPCA(X_train, gamma = 0.1, n_components = 2)

# Print results
print(kpca_result)

# Generate new data
X_new <- matrix(rnorm(20, mean = 1.5), 10, 2)

# Project new data
projected_data <- predict(kpca_result, X_new)
print(head(projected_data))

}
